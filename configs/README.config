{
    /* ------------------- DECISIONS -------------------- */
    /* All decision components */
    "decisions" : [
                    /* SimpleHandlersContainer, PredictiveHandlersContainer */
                    { "HandlersContainer" : "SimpleHandlersContainer" },

                    /* UrlStateComparator, DiffStateComparator, LevensteinStateComparator, DomStructureStateComparator */
                    { "StateComparator" : "DiffStateComparator" },

                    /* FormHandler */
                    { "FormHandler" : "FormHandler" },

                    /* AuthHandler */
                    { "AuthHandler" : "AuthHandler" },

                    /* BreadthFirstController, DepthFirstController, OptimizedController */
                    { "CrawlingController": "DepthFirstController" },

                    /* Crawler or CachingCrawler (deprecated, not fixed) */
                    { "Crawler" : "Crawler" }
                  ],

    /* Path to decision directory */
    "decisionsPath" : "components/decisions/",
    /* ------------------------------------------------------- */


    /* ------------------- CRAWLING -------------------- */
    /* waiting after handler observing */
    "observeHandlerTimeout" : 300,
    /* waiting after authorization */
    "authorizationTimeout" : 3000,

    /* hook ajax calls */
    "synchronousAjax" : true,

    /* timeout hooks */
    "setTimeoutHooksEnabled": false,
    "setTimeoutHooksThreshold" : 300,
    "setIntervalHooksThreshold" : 300,

    /* Ignore URL mode, any other requests will be ignored:
     * SAME_DOMAIN:               accept requests only in initial domain
     * SAME_DOMAIN_IN_NAVIGATION: accept requests in the initial domain in navigation, any url in resource loading
     * FROM_ROOT_ONLY:            accept requests only from root directory
     * FROM_ROOT_IN_NAVIGATION:   accept requests only from the root, any url in resource loading
     */
    "ignoreUrlMode" : "SAME_DOMAIN_IN_NAVIGATION",

    /* URLs to ignore (requests will be ignored); regex supported (string.match() is used)
    "ignoreUrlList" : [],
    /* ------------------------------------------------------- */


    /* ------------------- COMPONENTS ------------------------ */
    /* DomStructureStateComparator: enable attribute values normalization */
    "DomStructureStateComparator.normalizeAttributes": false,

    /* DiffStateComparator: ignored elements */
    "DiffStateComparator.ignoreList": [
      { "url": url, "selector": selector },
      { "url": url, "selector": selector }
    ],

    /* Learning mode */
    "PredictiveHandlersContainer.learning": false,
    /* Linear regression weights */
    "PredictiveHandlersContainer.weights": [0, 32, 8, 3, -2, 1],
    /* ------------------------------------------------------- */



    /* --------------- AUTHORIZATION, FORM FILLING ------------------- */
    /* Initial authentication form */
    "AuthHandler.authForm": {
         /* form element values */
         "elements" :
         [
              { "selector" : "#login-username", "property" : "value", "value" : "username123" },
              { "selector" : "#login-password", "property" : "value", "value" : "password123" }
         ],
         /* element to submit (selector + event) */
         "toSubmit" :
         {
             "selector" : "HTML > BODY:nth-child(2) > FORM:nth-child(1) > BUTTON:nth-child(5)",
             "event" : "click"
         }
    },

    /* Initial cookie jar object ({name, value, domain}) */
    "AuthHandler.cookies" : [
        { "name": "PHPSESSID", "value":"ebc2c54cfa1c9d2729bba130dde04b17", "domain": "example.com" },
        { "name": "PHPSESSID", "value":"aaaaaaaaaa1c9d2729bba130dde04b18", "domain": "as.example.com" }
    ],

    /* Manually defined forms */
    "FormHandler.forms":
    [
        {
            "url": "http://URL_REGEX/",
            "elements" :
            [
                    { "selector" : "#login-username", "property" : "value", "value" : "username123" },
                    { "selector" : "#login-password", "property" : "value", "value" : "password123" }
            ]
        }
    ],

    /* Fill forms with random values */
    "FormHandler.fillRandom": true,
    /* ------------------------------------------------------- */



    /* --------------------- LOGGING ------------------------ */
    /* logging levels: trace, debug, info, warning, error */
    "logLevel" : "debug",
    "logFile" : "log.txt",
    "logFileLevel" : "warning",
    /* verbose mode (JS console output) */
    "logCasperVerbose" : true,

    /* create *.dot state graph file (default: empty) */
    "createDotFile" : "statesGraph.dot",
    /* ------------------------------------------------------- */



    /* ------------------- COMMAND SERVER -------------------- */
    /* command server listen port */
    "commandListenPort" : 8089,
    /* no waiting for command server start command (default: false) */
    "immediateStart" : true,
    /* no waiting for command server stop command (default: false) */
    "immediateStop" : true,
    /* ------------------------------------------------------- */



    /* ------------ CACHING CRAWLING COMMANDS ---------------- */
    "serviceRequest" : "_CRAWLER_SERVICE_",
    "serviceHeaderResponse" : "CRAWLER_CACHE_INFO",
    "synchronousServiceAjax" : false
    /* ------------------------------------------------------- */
}
